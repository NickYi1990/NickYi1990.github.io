[{"data":1,"prerenderedAt":208},["Reactive",2],{"content-query-ExSxYEzfPs":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"body":10,"_type":203,"_id":204,"_source":205,"_file":206,"_extension":207},"/blog/tools/linux-screen-command","tools",false,"","掌握Linux Screen命令：一站式终端管理器神器","linux的screen命令是一个非常实用的命令行工具，它可以在多个进程之间复用一个物理终端。你可以将其理解为一个可以运行多个独立会话的终端管理器。他可以免除你打开多个物理终端进行不同对话管理这种麻烦的步骤，并且他还允许你将任务任务放至后台运行，特别是针对SSH会话，即使你退出了SSH会话，使用screen命令运行的程序也会继续在后台运行。",{"type":11,"children":12,"toc":200},"root",[13,21,42,47,143,148,181,196],{"type":14,"tag":15,"props":16,"children":18},"element","h1",{"id":17},"掌握linux-screen命令一站式终端管理器神器",[19],{"type":20,"value":8},"text",{"type":14,"tag":22,"props":23,"children":24},"p",{},[25,27,33,35,40],{"type":20,"value":26},"linux的screen命令是一个非常实用的命令行工具，它可以在",{"type":14,"tag":28,"props":29,"children":30},"strong",{},[31],{"type":20,"value":32},"多个进程之间复用一个物理终端",{"type":20,"value":34},"。你可以将其理解为一个可以运行多个独立会话的终端管理器。他可以免除你打开多个物理终端进行不同对话管理这种麻烦的步骤，并且他还",{"type":14,"tag":28,"props":36,"children":37},{},[38],{"type":20,"value":39},"允许你将任务任务放至后台运行",{"type":20,"value":41},"，特别是针对SSH会话，即使你退出了SSH会话，使用screen命令运行的程序也会继续在后台运行。",{"type":14,"tag":22,"props":43,"children":44},{},[45],{"type":20,"value":46},"下面用一个完整的示例重点介绍几个重要的命令",{"type":14,"tag":48,"props":49,"children":50},"ol",{},[51,76,90,104,125],{"type":14,"tag":52,"props":53,"children":54},"li",{},[55,57,70,74],{"type":20,"value":56},"启动一个名称为 image_classification 的会话窗口, 并运行一段循环打印的程序。",{"type":14,"tag":58,"props":59,"children":64},"pre",{"className":60,"code":62,"language":63,"meta":7},[61],"language-shell","screen -S image_classification\n","shell",[65],{"type":14,"tag":66,"props":67,"children":68},"code",{"__ignoreMap":7},[69],{"type":20,"value":62},{"type":14,"tag":71,"props":72,"children":73},"br",{},[],{"type":20,"value":75},"其命名功能则是一个很实用的特性。当你在一个物理终端下开启多个screen会话时，使用命名可以帮助你更好地管理和区分这些会话。你可以为每一个会话设置一个有意义的名字，这样在查看、切换或者管理会话时就可以更加直观易懂。以上，我们创建了一个名为\"image_classification\"的screen会话用来循环打印日志，也可以另外创建一个名为\"editing\"的screen会话用来编辑文档。当你需要查看打印日志进度时，你可以快速找到名为\"image_classification\"的会话，而不是需要去记忆或者查看每个会话的编号。",{"type":14,"tag":52,"props":77,"children":78},{},[79,81],{"type":20,"value":80},"在会话窗口中运行一段循环打印的程序",{"type":14,"tag":58,"props":82,"children":85},{"className":83,"code":84,"language":63,"meta":7},[61],"# 将以下代码复制到新打开的terminal\nfor i in {1..100}\ndo\necho \"Number: $i\"\nsleep 5\ndone\n",[86],{"type":14,"tag":66,"props":87,"children":88},{"__ignoreMap":7},[89],{"type":20,"value":84},{"type":14,"tag":52,"props":91,"children":92},{},[93,95],{"type":20,"value":94},"退出 image_classification screen terminal",{"type":14,"tag":58,"props":96,"children":99},{"className":97,"code":98,"language":63,"meta":7},[61],"ctrl+a+d\n",[100],{"type":14,"tag":66,"props":101,"children":102},{"__ignoreMap":7},[103],{"type":20,"value":98},{"type":14,"tag":52,"props":105,"children":106},{},[107,109,118,123],{"type":20,"value":108},"展示已打开的screen terminal, 红线部分是terminal的名称, 后面跟着的Detached表明我们现在已经通过ctrl+a+d快捷键退出了这个terminal，但是其内部的任务依然在运行。",{"type":14,"tag":58,"props":110,"children":113},{"className":111,"code":112,"language":63,"meta":7},[61],"screen -ls\n",[114],{"type":14,"tag":66,"props":115,"children":116},{"__ignoreMap":7},[117],{"type":20,"value":112},{"type":14,"tag":119,"props":120,"children":122},"image",{"src":121},"/image/tools/linux-screen-command/screen_ls.jpg",[],{"type":20,"value":124},"\n ",{"type":14,"tag":52,"props":126,"children":127},{},[128,130,139],{"type":20,"value":129},"重新连接进名称为 15802.image_classification 的terminal查看正在执行的内容",{"type":14,"tag":58,"props":131,"children":134},{"className":132,"code":133,"language":63,"meta":7},[61],"screen -r 15802.image_classification\n",[135],{"type":14,"tag":66,"props":136,"children":137},{"__ignoreMap":7},[138],{"type":20,"value":133},{"type":14,"tag":119,"props":140,"children":142},{"src":141},"/image/tools/linux-screen-command/screen_r.gif",[],{"type":14,"tag":22,"props":144,"children":145},{},[146],{"type":20,"value":147},"上面几步是一个相对比较完整的流程了，展示创建->退出->再连接的整体流程，以下是screen指令的一些其他的好处，使用screen命令可以大大提高你在远程服务器上工作的效率：",{"type":14,"tag":48,"props":149,"children":150},{},[151,156,161,166,171,176],{"type":14,"tag":52,"props":152,"children":153},{},[154],{"type":20,"value":155},"多任务：在一个SSH会话中，你可以使用screen命令在多个shell之间切换，这样你就可以同时进行多个任务，而不需要开启多个SSH会话。",{"type":14,"tag":52,"props":157,"children":158},{},[159],{"type":20,"value":160},"后台运行：即使你退出了SSH会话，使用screen命令运行的程序也会继续在后台运行。",{"type":14,"tag":52,"props":162,"children":163},{},[164],{"type":20,"value":165},"共享会话：screen命令允许你共享你的会话，这对于多人协作非常有用。",{"type":14,"tag":52,"props":167,"children":168},{},[169],{"type":20,"value":170},"窗口切换：你可以在不同的窗口之间快速切换，每个窗口都有自己的命令历史记录和shell状态。",{"type":14,"tag":52,"props":172,"children":173},{},[174],{"type":20,"value":175},"自定义：你可以自定义screen的快捷键，以及窗口的布局和行为。",{"type":14,"tag":52,"props":177,"children":178},{},[179],{"type":20,"value":180},"滚动和搜索：在screen中，你可以向上滚动查看之前的输出，也可以搜索文本。",{"type":14,"tag":15,"props":182,"children":184},{"id":183},"screen-cheat-sheet-原始地址",[185,187],{"type":20,"value":186},"Screen Cheat Sheet  ",{"type":14,"tag":188,"props":189,"children":193},"a",{"href":190,"rel":191},"https://devhints.io/screen",[192],"nofollow",[194],{"type":20,"value":195},"原始地址",{"type":14,"tag":119,"props":197,"children":199},{"src":198},"/image/tools/linux-screen-command/screen_cheat_sheet.jpg",[],{"title":7,"searchDepth":201,"depth":201,"links":202},2,[],"markdown","content:blog:tools:linux-screen-command.md","content","blog/tools/linux-screen-command.md","md",1698595353131]